import r,{memo as e}from"react";import t from"prop-types";import o from"katex";function n(e){const t=(n=["children","math","block","errorColor","renderError","settings","as","style"],s=e,Object.keys(s).reduce((r,e)=>(n.includes(e)||(r[e]=s[e]),r),{}));var n,s;const l=e.as||(e.block?"div":"span"),c=Object.assign({},e.as?{display:e.block?"block":"inline"}:null,e.style),a=e.children||e.math;try{const n=o.renderToString(a,Object.assign({},{displayMode:!!e.block,errorColor:e.errorColor,throwOnError:!!e.renderError},e.settings));return r.createElement(l,Object.assign({},t,{style:c,dangerouslySetInnerHTML:{__html:n}}))}catch(n){if(n instanceof o.ParseError||n instanceof TypeError)return e.renderError?e.renderError(n):r.createElement(l,Object.assign({},t,{style:c,dangerouslySetInnerHTML:{__html:n.message}}));throw n}}n.propTypes={children:t.string,math:t.string,block:t.bool,errorColor:t.string,renderError:t.func,settings:t.object,as:t.elementType,style:t.object};var s=e(n);export default s;
//# sourceMappingURL=react-katex.modern.js.map
