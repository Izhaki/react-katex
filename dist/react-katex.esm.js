import r,{memo as e}from"react";import t from"prop-types";import o from"katex";function n(){return(n=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(r[o]=t[o])}return r}).apply(this,arguments)}function s(e){var t,s,l=(t=["children","math","block","errorColor","renderError","settings","as","style"],s=e,Object.keys(s).reduce(function(r,e){return t.includes(e)||(r[e]=s[e]),r},{})),a=e.as||(e.block?"div":"span"),c=Object.assign({},e.as?{display:e.block?"block":"inline"}:null,e.style),i=e.children||e.math;try{var p=o.renderToString(i,Object.assign({},{displayMode:!!e.block,errorColor:e.errorColor,throwOnError:!!e.renderError},e.settings));return r.createElement(a,n({},l,{style:c,dangerouslySetInnerHTML:{__html:p}}))}catch(t){if(t instanceof o.ParseError||t instanceof TypeError)return e.renderError?e.renderError(t):r.createElement(a,n({},l,{style:c,dangerouslySetInnerHTML:{__html:t.message}}));throw t}}s.propTypes={children:t.string,math:t.string,block:t.bool,errorColor:t.string,renderError:t.func,settings:t.object,as:t.elementType,style:t.object};var l=e(s);export default l;
//# sourceMappingURL=react-katex.esm.js.map
